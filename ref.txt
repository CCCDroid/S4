Reference to S4

VM operations:

arithmetic
+  ( a b--a+b)  addition
-  ( a b--a-b)  subtraction
*  ( a b--a*b)  multiplication
/  ( a b--a/b)  division
%  ( a b--a%b)  modulo (division remainder)
_  (   n-- -n)  negate

bit manipulation
& ( a b--a&b)   32 bits and
|  ( a b--a|b)  32 bits or
~  (  n -- n')  not, all bits inversed (0=>1 1=>0)

stack
#  ( a--a a)      duplicate TOS (dup)
\  ( a b--a)      drop TOS (drop)
$  ( a b--b a)    swap top 2 stack items (swap)
@  ( a b--a b a)  push next (over)
++ ( a--a+1)      increment TOS
-- ( a--a-1)      decrement TOS

registers
x   ( --)       select register x (x: [a..z])
;   ( --value)  fetch from selected register
:   ( value--)  store into selected register
?   ( --value)  selected register contains an address. Fetch variable from there.
!   ( value--)  selected register contains an address. Store variable there.
x+  ( --)       select and increment register by 1
x-  ( --)       select and decrement register by 1

functions
{XY  ( --)  define function XY (XY: [AA..zz])
}    ( --)  end of definition
fXY  ( --)  call function <XY>

input/output
.    ( a--)    print TOS as decimal number
,    ( a--)    write TOS (27 is ESC, 10 is newline, etc) (emit)
^    ( --key)  read key, don't wait for newline.
"    ( --)     write string until next " to terminal
0..9 ( --a)    scan decimal number until non digit. 
                  to push multiple values, separate them by space (4711 3333)
                  to enter a negative number use _ (negate) after the number

conditions
<  ( a b--f)  true (-1) if (a < b), false (0) otherwise
>  ( a b--f)  true (-1) if (a > b), false (0) otherwise
=  ( a b--f)  true (-1) if (a = b), false (0) otherwise
(  ( f--)     if (f != 0), execute code until ), else skip code until )
[  ( f--f)    begin while loop if (f != 0), else skip code until ]
]  ( f--)     repeat loop if (f != 0).

other
B    ( --)      Output a space
C@   ( a--b)    Fetch byte from code space [a]
C!   ( v a--)   Store byte v to code space [a]
IA   ( --)      Info: All (CARSV)
IC   ( --)      Info: Code
IA   ( --)      Info: Functions
IR   ( --)      Info: Registers
IS   ( --)      Info: Stack
IV   ( --)      Info: Variables
K    ( a--b)    Multiply TOS by 1000
M    ( --a)     Push current time (GetTickCount() or millis())
R    ( --)      Output a CR/LF
SS   ( --)      Easter egg for Sandor!
XX   ( --)      Reset S4 to initial state
bye  ( --)      Exit S4
